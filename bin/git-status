#!/usr/bin/env perl
use Mojo::Base -strict;
use autodie;
use FindBin;
use Git::Repository;
use Carp;
use Term::ANSIColor;

=head1 NAME

git-status

=head1 DESCRIPTION

Run git status in evry repo. Output a compact report.

=cut

my $silence = !! grep {'--silence' eq $_} @ARGV;
my $gitdir = "$FindBin::Bin/../..";
opendir (my $dh , $gitdir);
while (my $item = readdir $dh) {
    next if $item =~/^\./;
    my $wd = "$gitdir/$item";
    next if ! -d $wd;
    next if ! -d "$wd/.git";
    next if grep {$item eq $_} (qw/ mt7601/);
    say "$wd" if ! $silence;
    my $r = Git::Repository->new( work_tree => $wd );
    $r->run( 'remote','update');
    my $output = $r->run( 'status' );
    if ($output =~/On branch master\s*\nYour branch is up-to-date.+nothing to commit\, working tree clean/ms) {
#        $r->run( 'pull' );
#To slow make a new script				print `prove -l -Q -m`;
        next;

    } elsif ($output =~/Your branch is behind.+(nothing to commit\, working tree clean|and can be fast-forwarded)/ms) {
      $r->run( 'pull' );
      next;
    }
    next if grep {$item eq $_} (qw/ gosync / );
    $output =~ s/On branch master//;
    $output =~ s/Your branch is up to date with \'origin\/master\'\.//;
    $output =~ s/[\#\s]*nothing to commit, working (tree|directory) clean//sm;
    $output =~ s/\n//gm;
        if (! $silence) {
    	print color('red');
	    say $output if $output;
	    print color('reset');
	}
}
closedir $dh;
